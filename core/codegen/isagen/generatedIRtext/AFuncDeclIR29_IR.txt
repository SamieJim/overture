Source Node : private static sm2tsm_VDM: (FSM3`StateMap -> FSM3`TStateMap)
	sm2tsm_VDM(sm) ==
(sm munion {s |-> <error_> | s in set (ALL_STATES \ (dom sm))})
Parent Node : null
Children w/ inherited fields : 
---- _name = sm2tsm_VDM
---- _raises = []
---- _preCond = AFuncDeclIRAFuncDeclIRAFuncDeclIRAFuncDeclIR(org.overture.codegen.ir.types.AMapMapTypeIR@72a68948 ==> bool)pre_sm2tsm_VDM[org.overture.codegen.ir.types.AMapMapTypeIR@6cf413c4sm ][]AFuncDeclIR[]isa_invTrue(sm)
---- _body = org.overture.codegen.ir.expressions.AMapUnionBinaryExpIR@6657434d
---- _metaData = []
---- _implicit = false
---- _abstract = false
---- _access = private
---- _templateTypes = []
---- _methodType = (org.overture.codegen.ir.types.AMapMapTypeIR@131c051c ==> org.overture.codegen.ir.types.AMapMapTypeIR@6a942159)
---- _postCond = AFuncDeclIRAFuncDeclIRAFuncDeclIRAFuncDeclIR(org.overture.codegen.ir.types.AMapMapTypeIR@263265fc * org.overture.codegen.ir.types.AMapMapTypeIR@7aa3075c ==> bool)post_sm2tsm_VDM[org.overture.codegen.ir.types.AMapMapTypeIR@9e4c9f1sm , org.overture.codegen.ir.types.AMapMapTypeIR@4231af7dRESULT ][]AFuncDeclIR[]org.overture.codegen.ir.expressions.AAndBoolBinaryExpIR@77992f42
---- _formalParams = [org.overture.codegen.ir.types.AMapMapTypeIR@15e25f0asm ]
Class : class org.overture.codegen.ir.declarations.AFuncDeclIR
