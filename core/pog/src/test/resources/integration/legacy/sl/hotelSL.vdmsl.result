["legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 47:37: ((r in set (dom (desk.prev))) \u003d\u003e (forall new_k:DEFAULT`Key \u0026 ((new_k not in set (desk~.issued)) \u003d\u003e let new_c:DEFAULT`Card \u003d mk_Card((desk~.prev)(r), new_k) in (((desk.issued) \u003d ((desk~.issued) union {new_k})) \u003d\u003e (((desk.prev) \u003d ((desk~.prev) ++ {r |-\u003e new_k})) \u003d\u003e ((g in set (dom guests~)) \u003d\u003e (g in set (dom guests~))))))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 60:22: (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (g in set (dom guests)))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 70:8: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 61:13: (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (forall c in set guests(g) \u0026 (r in set (dom locks))))","map compatible obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 103:13: (forall r:DEFAULT`Room, k:DEFAULT`Key, oldstate:DEFAULT`Hotel \u0026 (((k in set (desk.issued)) and (r not in set (dom locks))) \u003d\u003e (forall ldom1 in set (dom locks), rdom2 in set (dom {r |-\u003e k}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (locks(ldom1) \u003d {r |-\u003e k}(rdom2))))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 103:4: (forall r:DEFAULT`Room, k:DEFAULT`Key, oldstate:DEFAULT`Hotel \u0026 (((k in set (desk.issued)) and (r not in set (dom locks))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 58:57: ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (forall c in set guests(g) \u0026 ((not ((c.fst) \u003d locks(r))) \u003d\u003e (r in set (dom locks))))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 90:21: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (g in set (dom guests))))))","let be st existence obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 84:7: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r))))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 42:25: ((r in set (dom (desk.prev))) \u003d\u003e (forall new_k:DEFAULT`Key \u0026 ((new_k not in set (desk~.issued)) \u003d\u003e (r in set (dom (desk~.prev))))))","map compatible obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 102:17: (forall r:DEFAULT`Room, k:DEFAULT`Key, oldstate:DEFAULT`Hotel \u0026 (((k in set (desk.issued)) and (r not in set (dom locks))) \u003d\u003e (forall ldom1 in set (dom (desk.prev)), rdom2 in set (dom {r |-\u003e k}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e ((desk.prev)(ldom1) \u003d {r |-\u003e k}(rdom2))))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 62:13: (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (forall c in set guests(g) \u0026 ((not (((c.fst) \u003d locks(r)) and (locks \u003d (locks~ ++ {r |-\u003e (c.snd)})))) \u003d\u003e (r in set (dom locks)))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 96:6: let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 87:10: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 84:16: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (g in set (dom guests))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 109:3: (forall g:DEFAULT`Guest, cs:set of (DEFAULT`Card), oldstate:DEFAULT`Hotel \u0026 ((forall c in set cs \u0026 ({(c.fst), (c.snd)} subset (desk.issued))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","let be st existence obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 94:7: (exists k:DEFAULT`Key \u0026 (k not in set (desk.issued)))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 73:45: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (g in set (dom guests)))))","map compatible obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 48:19: ((r in set (dom (desk.prev))) \u003d\u003e (forall new_k:DEFAULT`Key \u0026 ((new_k not in set (desk~.issued)) \u003d\u003e let new_c:DEFAULT`Card \u003d mk_Card((desk~.prev)(r), new_k) in (((desk.issued) \u003d ((desk~.issued) union {new_k})) \u003d\u003e (((desk.prev) \u003d ((desk~.prev) ++ {r |-\u003e new_k})) \u003d\u003e ((not (g in set (dom guests~))) \u003d\u003e (forall ldom1 in set (dom guests~), rdom2 in set (dom {g |-\u003e {new_c}}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (guests~(ldom1) \u003d {g |-\u003e {new_c}}(rdom2))))))))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 72:8: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 102:4: (forall r:DEFAULT`Room, k:DEFAULT`Key, oldstate:DEFAULT`Hotel \u0026 (((k in set (desk.issued)) and (r not in set (dom locks))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 12:1: (exists d:DEFAULT`Desk \u0026 ((rng (d.prev)) subset (d.issued)))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 86:16: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (r in set (dom locks))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 90:39: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (forall c in set guests(g) \u0026 (r in set (dom locks)))))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 110:35: (forall g:DEFAULT`Guest, cs:set of (DEFAULT`Card), oldstate:DEFAULT`Hotel \u0026 ((forall c in set cs \u0026 ({(c.fst), (c.snd)} subset (desk.issued))) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (g in set (dom guests)))))","map compatible obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 74:28: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e ((not (g in set (dom guests))) \u003d\u003e (forall ldom1 in set (dom guests), rdom2 in set (dom {g |-\u003e {new_c}}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (guests(ldom1) \u003d {g |-\u003e {new_c}}(rdom2)))))))","operation postcondition satisfiable obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 33:1: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 (pre_CheckIn(g, r, oldstate) \u003d\u003e (exists newstate:DEFAULT`Hotel \u0026 post_CheckIn(g, r, oldstate, newstate))))","let be st existence obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 66:7: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e (exists new_k:DEFAULT`Key \u0026 (new_k not in set (desk.issued)))))","state invariant satisfiable obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 16:7: (exists desk:DEFAULT`Desk, locks:map (DEFAULT`Room) to (DEFAULT`Key), guests:map (DEFAULT`Guest) to (set of (DEFAULT`Card)) \u0026 (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 58:39: ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (forall c in set guests(g) \u0026 (r in set (dom locks)))))","state invariant holds obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 71:8: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e let h \u003d Hotel in (((dom ((h.desk).prev)) subset (dom (h.locks))) and ((dunion {{(c.fst), (c.snd)} | c in set (dunion (rng (h.guests)))}) subset ((h.desk).issued)))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 68:25: (forall g:DEFAULT`Guest, r:DEFAULT`Room, oldstate:DEFAULT`Hotel \u0026 ((r in set (dom (desk.prev))) \u003d\u003e (r in set (dom (desk.prev)))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 58:21: ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (g in set (dom guests))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 84:60: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e ((not ((c.fst) \u003d locks(r))) \u003d\u003e (r in set (dom locks)))))","operation postcondition satisfiable obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 51:1: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (pre_Enter(r, g, oldstate) \u003d\u003e (exists newstate:DEFAULT`Hotel \u0026 post_Enter(r, g, oldstate, newstate))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 84:40: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e (r in set (dom locks))))","legal map application obligation in \u0027DEFAULT\u0027 (hotelSL.vdmsl) at line 90:57: (forall r:DEFAULT`Room, g:DEFAULT`Guest, oldstate:DEFAULT`Hotel \u0026 (((r in set (dom locks)) and ((g in set (dom guests)) and (exists c in set guests(g) \u0026 (((c.fst) \u003d locks(r)) or ((c.snd) \u003d locks(r)))))) \u003d\u003e ((r in set (dom locks)) \u003d\u003e ((g in set (dom guests)) \u003d\u003e (forall c in set guests(g) \u0026 ((not ((c.fst) \u003d locks(r))) \u003d\u003e (r in set (dom locks))))))))"]