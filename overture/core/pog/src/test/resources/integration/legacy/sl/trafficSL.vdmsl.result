["type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 72:5: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 (((p in set (dom lights)) and ((lights(p) \u003d \u003cRed\u003e) and (forall mk_Conflict(p1, p2) in set conflicts \u0026 ((p \u003d p1) \u003d\u003e (lights(p2) \u003d \u003cRed\u003e))))) \u003d\u003e inv_Kernel(mk_Kernel(ChgLight(lights, p, \u003cGreen\u003e), conflicts))))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 83:31: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 ((p in set (dom lights)) \u003d\u003e (p in set (dom lights))))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 64:16: (forall mk_Kernel(ls, cs):DEFAULT`Kernel \u0026 (forall c in set cs \u0026 ((mk_Conflict((c.path2), (c.path1)) in set cs) \u003d\u003e (((c.path1) in set (dom ls)) \u003d\u003e (((c.path2) in set (dom ls)) \u003d\u003e ((c.path1) in set (dom ls)))))))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 89:5: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 (((p in set (dom lights)) and (lights(p) \u003d \u003cGreen\u003e)) \u003d\u003e inv_Kernel(mk_Kernel(ChgLight(lights, p, \u003cAmber\u003e), conflicts))))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 31:16: inv_Conflict(mk_Conflict(p3, p1))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 29:16: inv_Conflict(mk_Conflict(p2, p3))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 30:16: inv_Conflict(mk_Conflict(p2, p4))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 27:16: inv_Conflict(mk_Conflict(p1, p3))","enumeration map injectivity obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 21:12: (forall m1, m2 in set {{p1 |-\u003e \u003cRed\u003e}, {p2 |-\u003e \u003cRed\u003e}, {p3 |-\u003e \u003cGreen\u003e}, {p4 |-\u003e \u003cGreen\u003e}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 28:16: inv_Conflict(mk_Conflict(p1, p4))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 33:16: inv_Conflict(mk_Conflict(p3, p2))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 82:5: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 (((p in set (dom lights)) and (lights(p) \u003d \u003cAmber\u003e)) \u003d\u003e inv_Kernel(mk_Kernel(ChgLight(lights, p, \u003cRed\u003e), conflicts))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 57:3: (exists mk_Kernel(ls, cs):DEFAULT`Kernel \u0026 (forall c in set cs \u0026 ((mk_Conflict((c.path2), (c.path1)) in set cs) and (((c.path1) in set (dom ls)) and (((c.path2) in set (dom ls)) and ((ls((c.path1)) \u003d \u003cRed\u003e) or (ls((c.path2)) \u003d \u003cRed\u003e)))))))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 90:31: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 ((p in set (dom lights)) \u003d\u003e (p in set (dom lights))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 48:3: (exists mk_Conflict(path1, path2):DEFAULT`Conflict \u0026 (path1 \u003c\u003e path2))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 43:3: (exists t:DEFAULT`Time \u0026 (t \u003e\u003d 0))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 74:7: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 ((p in set (dom lights)) \u003d\u003e (p in set (dom lights))))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 61:15: (forall mk_Kernel(ls, cs):DEFAULT`Kernel \u0026 (forall c in set cs \u0026 inv_Conflict(mk_Conflict((c.path2), (c.path1)))))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 32:16: inv_Conflict(mk_Conflict(p4, p1))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 37:12: inv_Kernel(mk_Kernel(lights, conflicts))","type compatibility obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 34:16: inv_Conflict(mk_Conflict(p4, p2))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 76:25: (forall p:DEFAULT`Path, mk_Kernel(lights, conflicts):DEFAULT`Kernel \u0026 ((p in set (dom lights)) \u003d\u003e ((lights(p) \u003d \u003cRed\u003e) \u003d\u003e (forall mk_Conflict(p1, p2) in set conflicts \u0026 ((p \u003d p1) \u003d\u003e (p2 in set (dom lights)))))))","legal map application obligation in \u0027DEFAULT\u0027 (trafficSL.vdmsl) at line 64:39: (forall mk_Kernel(ls, cs):DEFAULT`Kernel \u0026 (forall c in set cs \u0026 ((mk_Conflict((c.path2), (c.path1)) in set cs) \u003d\u003e (((c.path1) in set (dom ls)) \u003d\u003e (((c.path2) in set (dom ls)) \u003d\u003e ((not (ls((c.path1)) \u003d \u003cRed\u003e)) \u003d\u003e ((c.path2) in set (dom ls))))))))"]