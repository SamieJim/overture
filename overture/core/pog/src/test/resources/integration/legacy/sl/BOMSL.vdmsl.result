["legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 30:27: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)), ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e (forall p in set ps \u0026 (p in set (dom bom)))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 34:10: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)), ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e let newps:set of (DEFAULT`Pn) \u003d (dunion {bom(p) | p in set ps}) in pre_TransClos(bom, (ps union newps)))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 44:16: (forall p:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p in set (dom bom)) \u003d\u003e pre_Exps(bom, bom(p))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 53:33: (forall bom:DEFAULT`BOM, ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (forall p1 in set ps \u0026 pre_Exps(bom, (ps \\ {p1}))))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 70:20: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e (p1 in set (dom bom)))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 44:26: (forall p:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","let be st existence obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 51:12: (forall bom:DEFAULT`BOM, ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (exists p1 in set ps \u0026 true))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 53:10: (forall bom:DEFAULT`BOM, ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (ps \u003d {})) \u003d\u003e (forall p1 in set ps \u0026 pre_Explode(p1, bom)))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 32:29: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)), ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e (forall p in set ps \u0026 (p in set (dom bom))))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 9:43: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)) \u0026 ((forall ps in set (rng bom) \u0026 (ps subset (dom bom))) \u003d\u003e (forall p in set (dom bom) \u0026 pre_Parts(p, bom))))","type invariant satisfiable obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 6:1: (exists bom:DEFAULT`BOM \u0026 ((forall ps in set (rng bom) \u0026 (ps subset (dom bom))) and (forall p in set (dom bom) \u0026 (p not in set Parts(p, bom)))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 44:3: (forall p:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 70:48: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e ((p2 not in set bom(p1)) \u003d\u003e pre_Explode(p2, bom)))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 25:18: (forall p:DEFAULT`Pn, bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)) \u0026 ((p in set (dom bom)) \u003d\u003e (p in set (dom bom))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 76:16: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 ((p1 in set (dom bom)) \u003d\u003e ((p2 in set (dom bom)) \u003d\u003e (p1 in set (dom bom)))))","legal function application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 25:3: (forall p:DEFAULT`Pn, bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)) \u0026 ((p in set (dom bom)) \u003d\u003e pre_TransClos(bom, bom(p))))","type compatibility obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 72:1: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) \u003d\u003e inv_BOM((bom ++ {p1 |-\u003e (bom(p1) \\ {p2})}))))","type compatibility obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 38:1: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)), pns:set of (DEFAULT`Pn) \u0026 (((card (dom bom)) - (card pns)) \u003e\u003d 0))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 74:19: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) \u003d\u003e (p1 in set (dom bom))))","type compatibility obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 56:1: (forall bom:DEFAULT`BOM, p:DEFAULT`Pn, ps:set of (DEFAULT`Pn) \u0026 (((p not in set (dom bom)) and (ps subset (dom bom))) \u003d\u003e inv_BOM((bom munion {p |-\u003e ps}))))","enumeration map injectivity obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 18:9: (forall m1, m2 in set {{1 |-\u003e {2, 4}}, {2 |-\u003e {3, 4, 5}}, {3 |-\u003e {5, 6}}, {4 |-\u003e {6}}, {5 |-\u003e {4}}, {6 |-\u003e {1}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 66:1: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) \u003d\u003e inv_BOM((bom ++ {p1 |-\u003e (bom(p1) union {p2})}))))","recursive function obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 34:10: (forall bom:map (DEFAULT`Pn) to (set of (DEFAULT`Pn)), ps:set of (DEFAULT`Pn) \u0026 ((ps subset (dom bom)) \u003d\u003e ((not (forall p in set ps \u0026 (bom(p) subset ps))) \u003d\u003e let newps:set of (DEFAULT`Pn) \u003d (dunion {bom(p) | p in set ps}) in (IncrAcc(bom, ps) \u003e IncrAcc(bom, (ps union newps))))))","map compatible obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 58:3: (forall bom:DEFAULT`BOM, p:DEFAULT`Pn, ps:set of (DEFAULT`Pn) \u0026 (((p not in set (dom bom)) and (ps subset (dom bom))) \u003d\u003e (forall ldom1 in set (dom bom), rdom2 in set (dom {p |-\u003e ps}) \u0026 ((ldom1 \u003d rdom2) \u003d\u003e (bom(ldom1) \u003d {p |-\u003e ps}(rdom2))))))","enumeration map injectivity obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 15:7: (forall m1, m2 in set {{1 |-\u003e {2, 4}}, {2 |-\u003e {3, 4, 5}}, {3 |-\u003e {5, 6}}, {4 |-\u003e {6}}, {5 |-\u003e {4}}, {6 |-\u003e {}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027DEFAULT\u0027 (BOMSL.vdmsl) at line 68:18: (forall p1:DEFAULT`Pn, p2:DEFAULT`Pn, bom:DEFAULT`BOM \u0026 (((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) \u003d\u003e (p1 in set (dom bom))))"]