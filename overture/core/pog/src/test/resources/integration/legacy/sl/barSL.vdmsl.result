["legal map application obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 85:22: (forall e:BAG`Elem, b:BAG`Bag \u0026 ((e in set (dom b)) \u003d\u003e (e in set (dom b))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 232:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 2}, {\u003cB\u003e |-\u003e 2}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","recursive function obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 444:28: (forall supps:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not ((dom supps) \u003d {})) \u003d\u003e (forall s in set (dom supps) \u0026 (CardDom(supps) \u003e CardDom(({s} \u003c-: supps))))))","cases exhaustive obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 62:5: (forall s:seq of (BAG`Elem), b:BAG`Bag \u0026 ((s \u003d []) or (exists [e] ^ rest:seq of (BAG`Elem) \u0026 (s \u003d ([e] ^ rest)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 265:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 2}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 249:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 286:16: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","let be st existence obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 442:11: (forall supps:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not ((dom supps) \u003d {})) \u003d\u003e (exists s in set (dom supps) \u0026 true)))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 214:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 5}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 462:10: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 3}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 88:3: (forall e:BAG`Elem, b:BAG`Bag \u0026 is_((if (e in set (dom b))\nthen (if (b(e) \u003d 1)\nthen ({e} \u003c-: b)\nelse (b ++ {e |-\u003e (b(e) - 1)}))\nelse b), map (BAG`Elem) to (nat1)))","type compatibility obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 123:3: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 is_({e |-\u003e (Count(e, b1) - Count(e, b2)) | e in set (dom b1) \u0026 (Count(e, b1) \u003e Count(e, b2))}, map (BAG`Elem) to (nat1)))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 460:10: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 2}, {\u003cB\u003e |-\u003e 3}, {\u003cC\u003e |-\u003e 6}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 254:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 5}, {\u003cD\u003e |-\u003e 4}, {\u003cE\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","type compatibility obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 113:3: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 is_({e |-\u003e (Count(e, b1) + Count(e, b2)) | e in set ((dom b1) union (dom b2))}, map (BAG`Elem) to (nat1)))","recursive function obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 138:17: (forall b:BAG`Bag \u0026 ((not (b \u003d {|-\u003e})) \u003d\u003e (forall e in set (dom b) \u0026 (CardDom(b) \u003e CardDom(({e} \u003c-: b))))))","type compatibility obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 108:3: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 is_({e |-\u003e Max(Count(e, b1), Count(e, b2)) | e in set ((dom b1) union (dom b2))}, map (BAG`Elem) to (nat1)))","legal map application obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 91:13: (forall e:BAG`Elem, b:BAG`Bag \u0026 ((e in set (dom b)) \u003d\u003e (e in set (dom b))))","recursive function obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 405:9: (forall cl:BAR`CellarLevel, mk_(c, r):BAR`Pub, sb:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not (sb \u003d {|-\u003e})) \u003d\u003e (forall s in set (dom sb) \u0026 let missing:BAG`Bag \u003d BAG`Difference(cl, c) in ((BAG`Size(missing) \u003e 0) \u003d\u003e let can_restock:BAG`Bag \u003d BAG`Intersection(missing, sb(s)) in (CardCellar(cl, mk_(c, r), sb) \u003e CardCellar(cl, mk_(BAG`Union(c, can_restock), r), ({s} \u003c-: sb)))))))","recursive function obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 64:19: (forall s:seq of (BAG`Elem), b:BAG`Bag \u0026 ((not ([] \u003d s)) \u003d\u003e (exists [e] ^ rest:seq of (BAG`Elem) \u0026 ((([e] ^ rest) \u003d s) \u003d\u003e let [e] ^ rest \u003d s in (LenPar1(s, b) \u003e LenPar1(rest, Add(e, b)))))))","enumeration map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 162:16: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 138:10: (forall b:BAG`Bag \u0026 ((not (b \u003d {|-\u003e})) \u003d\u003e (forall e in set (dom b) \u0026 (e in set (dom b)))))","enumeration map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 163:16: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 5}, {\u003cD\u003e |-\u003e 4}, {\u003cE\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 471:12: (forall m1, m2 in set {{\"Fizz\" |-\u003e {\u003cA\u003e |-\u003e 10}}, {\"Real\" |-\u003e {\u003cB\u003e |-\u003e 1, \u003cC\u003e |-\u003e 5}}, {\"Scrumpy\" |-\u003e {\u003cB\u003e |-\u003e 1, \u003cC\u003e |-\u003e 10}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 291:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 4}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 9}, {\u003cD\u003e |-\u003e 4}, {\u003cE\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","let be st existence obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 136:14: (forall b:BAG`Bag \u0026 ((not (b \u003d {|-\u003e})) \u003d\u003e (exists e in set (dom b) \u0026 true)))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 468:12: (forall m1, m2 in set {{\"Fizz\" |-\u003e {\u003cA\u003e |-\u003e 10}}, {\"Real\" |-\u003e {\u003cB\u003e |-\u003e 10, \u003cC\u003e |-\u003e 2}}, {\"Scrumpy\" |-\u003e {\u003cB\u003e |-\u003e 1, \u003cC\u003e |-\u003e 10}}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 456:18: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 5}, {\u003cB\u003e |-\u003e 5}, {\u003cC\u003e |-\u003e 3}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 461:10: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cC\u003e |-\u003e 2}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 219:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 4}, {\u003cD\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 458:13: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 8}, {\u003cB\u003e |-\u003e 5}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 363:26: (forall supps:map (BAR`Supplier) to (BAR`Stock), s:BAR`Supplier, stock:BAR`Order, mk_(c, r):BAR`Pub \u0026 ((s in set (dom supps)) \u003d\u003e (s in set (dom supps))))","legal map application obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 93:27: (forall e:BAG`Elem, b:BAG`Bag \u0026 ((e in set (dom b)) \u003d\u003e ((not (b(e) \u003d 1)) \u003d\u003e (e in set (dom b)))))","legal map application obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 99:10: (forall e:BAG`Elem, b:BAG`Bag \u0026 ((e in set (dom b)) \u003d\u003e (e in set (dom b))))","comprehension map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 115:5: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 (forall m1, m2 in set {{e |-\u003e (Count(e, b1) + Count(e, b2))} | e in set ((dom b1) union (dom b2))} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4))))))","comprehension map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 125:5: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 (forall m1, m2 in set {{e |-\u003e (Count(e, b1) - Count(e, b2))} | e in set (dom b1) \u0026 (Count(e, b1) \u003e Count(e, b2))} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4))))))","type compatibility obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 147:3: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 is_({e |-\u003e Min(Count(e, b1), Count(e, b2)) | e in set ((dom b1) inter (dom b2))}, map (BAG`Elem) to (nat1)))","let be st existence obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 397:11: (forall cl:BAR`CellarLevel, mk_(c, r):BAR`Pub, sb:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not (sb \u003d {|-\u003e})) \u003d\u003e (exists s in set (dom sb) \u0026 true)))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 457:15: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 2}, {\u003cB\u003e |-\u003e 2}, {\u003cC\u003e |-\u003e 5}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 473:27: (forall m1, m2 in set {{\u003cB\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 10}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 260:5: (forall m1, m2 in set {{\u003cC\u003e |-\u003e 5}, {\u003cD\u003e |-\u003e 4}, {\u003cE\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 470:27: (forall m1, m2 in set {{\u003cB\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 10}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","legal map application obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 403:53: (forall cl:BAR`CellarLevel, mk_(c, r):BAR`Pub, sb:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not (sb \u003d {|-\u003e})) \u003d\u003e (forall s in set (dom sb) \u0026 let missing:BAG`Bag \u003d BAG`Difference(cl, c) in ((BAG`Size(missing) \u003e 0) \u003d\u003e (s in set (dom sb))))))","legal map application obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 444:18: (forall supps:map (BAR`Supplier) to (BAR`Stock) \u0026 ((not ((dom supps) \u003d {})) \u003d\u003e (forall s in set (dom supps) \u0026 (s in set (dom supps)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 472:24: (forall m1, m2 in set {{\u003cB\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 5}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 459:13: (forall m1, m2 in set {{\u003cB\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 4}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAR\u0027 (barSL.vdmsl) at line 469:24: (forall m1, m2 in set {{\u003cB\u003e |-\u003e 10}, {\u003cC\u003e |-\u003e 2}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","enumeration map injectivity obligation in \u0027BAGTEST\u0027 (barSL.vdmsl) at line 274:5: (forall m1, m2 in set {{\u003cA\u003e |-\u003e 3}, {\u003cB\u003e |-\u003e 1}, {\u003cC\u003e |-\u003e 1}} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4)))))","comprehension map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 110:5: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 (forall m1, m2 in set {{e |-\u003e Max(Count(e, b1), Count(e, b2))} | e in set ((dom b1) union (dom b2))} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4))))))","comprehension map injectivity obligation in \u0027BAG\u0027 (barSL.vdmsl) at line 149:5: (forall b1:BAG`Bag, b2:BAG`Bag \u0026 (forall m1, m2 in set {{e |-\u003e Min(Count(e, b1), Count(e, b2))} | e in set ((dom b1) inter (dom b2))} \u0026 (forall d3 in set (dom m1), d4 in set (dom m2) \u0026 ((d3 \u003d d4) \u003d\u003e (m1(d3) \u003d m2(d4))))))"]