module A
definitions
functions
	f: nat * nat -> nat
	f(n, n) == n
	pre n < 10;

	g([n]:seq of nat) r:nat
		== n
	pre n < 10;
	
operations
	o1: nat * nat ==> nat
	o1(n, n) == return n
	pre n < 10;

	g([n]:seq of nat) r:nat
		== return n
	pre n < 10;

end A