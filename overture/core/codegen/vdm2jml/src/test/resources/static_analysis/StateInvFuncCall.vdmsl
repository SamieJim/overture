--
-- Note that this test does not execute when code generated
--
module Entry
imports from Other all, from IO all
exports all
definitions

state St of
  init p == p = mk_St()
  inv - == predEntry() and Other`predOther() 
end

operations

Run : () ==> ?
Run () ==
let - = mk_St()
in
(
  IO`println("Done! (expecting no errors)");
  return 0;
);
  
functions

predEntry:  () -> bool
predEntry () == true;

end Entry

module Other
exports all
definitions

functions

predOther : () -> bool
predOther () == true;

end Other