"Before valid use"
"After valid use"
"Before illegal use"
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:72: JML invariant is false on leaving method project.Entrytypes.A2.valid()
  public Boolean valid() {
                 ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:72: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: JML caller invariant is false on leaving calling method (Parameter: _f, Caller: project.Entrytypes.A1.inv_A1(project.Entrytypes.A2), Callee: java.lang.Number.longValue())
  public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                           ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: JML invariant is false on leaving method project.Entrytypes.A1.inv_A1(project.Entrytypes.A2) (parameter _f)
  public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                           ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: JML caller invariant is false on leaving calling method (Parameter: _f, Caller: project.Entrytypes.A1.inv_A1(project.Entrytypes.A2), Callee: java.lang.Number.longValue())
  public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                           ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: JML invariant is false on leaving method project.Entrytypes.A1.inv_A1(project.Entrytypes.A2) (parameter _f)
  public static Boolean inv_A1(final project.Entrytypes.A2 _f) {
                                                           ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:79: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:72: JML invariant is false on leaving method project.Entrytypes.A1.valid()
  public Boolean valid() {
                 ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A1.java:72: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A1(f);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: JML invariant is false
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:72: JML invariant is false on leaving method project.Entrytypes.A2.valid()
  public Boolean valid() {
                 ^
/home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:12: Associated declaration: /home/peter/git-repos/ovt/core/codegen/vdm2jml/target/jml/code/RecWithRecFieldAtomicViolation/project/Entrytypes/A2.java:72: 
  //@ public instance invariant project.Entry.invChecksOn ==> inv_A2(x);
                      ^
"After illegal use"