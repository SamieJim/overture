module Entry

exports all
imports from IO all
definitions

types

R ::
 b : bool;

operations

Run : () ==> ?
Run () ==
(
  let - = f() in skip;
  IO`println("Done! Expected no violations");
  return 0;
);

functions

f :  () -> bool
f () == 
let mk_R(true) in set {mk_R(false), mk_R(true)}
in
  true;

end Entry	